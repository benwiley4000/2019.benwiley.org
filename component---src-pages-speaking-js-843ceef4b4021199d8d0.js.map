{"version":3,"sources":["webpack:///./src/components/speakingentry.js","webpack:///./src/data/speaking.js","webpack:///./src/pages/speaking.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_object-sap.js"],"names":["youtubeBasePath","youtubeParams","enablejsapi","origin","color","stringifiedYoutubeParams","referrer","Object","keys","map","key","concat","join","getYoutubeUrl","_ref","youtubeId","SpeakingEntry","render","_this$props","this","props","title","conferenceName","conferenceDate","description","location","react_default","a","createElement","className","src","href","frameBorder","allowFullScreen","PureComponent","propsTypes","PropTypes","string","isRequired","speaking","Speaking","react","seo","keywords","talk","speakingentry","assign","SEO","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","length","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","array","arrayOf","toObject","__webpack_require__","$keys","it","$export","core","fails","module","exports","KEY","exec","fn","exp","S","F"],"mappings":"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","file":"component---src-pages-speaking-js-843ceef4b4021199d8d0.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nconst youtubeBasePath = 'https://www.youtube.com/embed/'\n\nconst youtubeParams = {\n  enablejsapi: 1,\n  origin: 'https://benwiley.org',\n  color: 'white',\n}\nconst stringifiedYoutubeParams = referrer => {\n  return (\n    Object\n      .keys(youtubeParams)\n      .map(key => `${key}=${youtubeParams[key]}`)\n      .concat(`widget_referrer=${referrer}`)\n      .join('&')\n  );\n}\n\nfunction getYoutubeUrl({ youtubeId, referrer }) {\n  return `${youtubeBasePath}/${youtubeId}?${stringifiedYoutubeParams(referrer)}`\n}\n\nclass SpeakingEntry extends PureComponent {\n  render() {\n    const {\n      title,\n      conferenceName,\n      conferenceDate,\n      description,\n      youtubeId,\n      location\n    } = this.props\n    return (\n      <div className=\"speaking_entry\">\n        <h3>{title}</h3>\n        <p className=\"time_and_place\">\n          {conferenceDate}\n          <br />\n          {conferenceName}\n        </p>\n        <iframe\n          src={getYoutubeUrl({ youtubeId, referrer: location.href })}\n          frameBorder={0}\n          allowFullScreen\n        />\n        <p>{description}</p>\n      </div>\n    )\n  }\n}\n\nSpeakingEntry.propsTypes = {\n  title: PropTypes.string.isRequired,\n  conferenceName: PropTypes.string.isRequired,\n  conferenceDate: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  youtubeId: PropTypes.string.isRequired,\n}\n\nexport default SpeakingEntry\n","export default [\n  {\n    title: 'Cassette: A declarative way to build media players for the web',\n    conferenceName: 'Forward JS Ottawa',\n    conferenceDate: 'April 10, 2019',\n    description:\n      'Cassette is a React component library that abstracts away much of the hassle that can comes with media player state management. I talk about some of the design decisions I made with Cassette. Then I demonstrate how simple it is to get started, and how the power of Cassette supports rapid development of the features users expect from today\\'s media applications.',\n    youtubeId: 'fsySVdhEErI'\n  },\n]\n","import React, { Fragment } from 'react'\n\nimport SEO from '../components/seo'\n\nimport SpeakingEntry from '../components/speakingentry'\nimport speaking from '../data/speaking'\n\nconst Speaking = props => (\n  <Fragment>\n    <SEO\n      title=\"Speaking\"\n      keywords={[\n        'Ben Wiley',\n        'JavaScript',\n        'Web',\n        'React',\n        'Cassette',\n        'JavaScript',\n        'Open Source',\n      ]}\n    />\n    <h1>Speaking</h1>\n    {speaking.map(talk => (\n      <SpeakingEntry\n        {...talk}\n        key={talk.title}\n        location={props.location}\n      />\n    ))}\n  </Fragment>\n)\n\nexport default Speaking\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n"],"sourceRoot":""}