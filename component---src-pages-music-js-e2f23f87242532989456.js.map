{"version":3,"sources":["webpack:///./src/components/songentry.js","webpack:///./src/pages/music.js"],"names":["convertToTime","number","mins","Math","floor","secs","toFixed","progressBarHandle","react_default","a","createElement","className","SongEntry","props","_this","_PureComponent","call","this","state","timeWhenLastActive","currentTime","durationWhenLastActive","duration","getDerivedStateFromProps","active","render","_this$props","track","trackIndex","entryRef","_this$state","t","dur","ref","title","cassette_player","meta","description","cassette_components","progressDirection","progressClassName","handle","progress","PureComponent","propsTypes","PropTypes","object","isRequired","bool","func","playerContextFilter","Music","mounted","activeEntryRef","elem","initialActiveDiv","componentDidMount","_this2","location","div","scrollToActiveTrack","requestAnimationFrame","scrollIntoView","behavior","block","setState","_this3","playlist","activeTrackIndex","react","seo","keywords","map","i","songentry","key","url","profileimage","filename","caption"],"mappings":"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","file":"component---src-pages-music-js-e2f23f87242532989456.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { playerContextFilter } from '@cassette/core'\nimport { PlayPauseButton } from '@cassette/player'\nimport { MediaProgressBar, ProgressBarDisplay } from '@cassette/components'\n\nfunction convertToTime(number) {\n  const mins = Math.floor(number / 60)\n  const secs = (number % 60).toFixed()\n  return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`\n}\n\nconst progressBarHandle = (\n  <div className=\"song_progress_handle\">\n    <div />\n  </div>\n)\n\nclass SongEntry extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timeWhenLastActive: props.currentTime,\n      durationWhenLastActive: props.duration,\n    }\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.active) {\n      return {\n        timeWhenLastActive: props.currentTime,\n        durationWhenLastActive: props.duration,\n      }\n    }\n    return null\n  }\n\n  render() {\n    const { track, trackIndex, active, entryRef } = this.props\n    const { timeWhenLastActive: t, durationWhenLastActive: dur } = this.state\n    return (\n      <div className=\"song_entry\" ref={entryRef}>\n        <h3>\n          {track.title}\n          <PlayPauseButton trackIndex={trackIndex} />\n        </h3>\n        <p>{track.meta.description}</p>\n        <div className={'song_entry_progress' + (active ? ' active' : '')}>\n          <div className=\"info\">\n            {convertToTime(t)} / {convertToTime(dur)}\n          </div>\n          {active && (\n            <MediaProgressBar\n              progressDirection=\"right\"\n              className=\"progress_bar\"\n              progressClassName=\"progress\"\n              handle={progressBarHandle}\n            />\n          )}\n          {!active && (\n            <ProgressBarDisplay\n              progress={t / dur}\n              progressDirection=\"right\"\n              className=\"progress_bar\"\n              progressClassName=\"progress\"\n              handle={progressBarHandle}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nSongEntry.propsTypes = {\n  track: PropTypes.object.isRequired,\n  trackIndex: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  currentTime: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired,\n  entryRef: PropTypes.func,\n}\n\nexport default playerContextFilter(SongEntry, ['currentTime', 'duration'])\n","import React, { Fragment, PureComponent } from 'react'\n\nimport SEO from '../components/seo'\nimport SongEntry from '../components/songentry'\nimport ProfileImage from '../components/profileimage'\n\nimport { playerContextFilter } from '@cassette/core'\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mounted: false,\n    }\n    this.activeEntryRef = elem => {\n      this.initialActiveDiv = elem\n    }\n  }\n\n  componentDidMount() {\n    const { state } = this.props.location\n    const div = state && state.scrollToActiveTrack && this.initialActiveDiv\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (div) {\n          div.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n          })\n        }\n        this.setState({\n          mounted: true,\n        })\n      })\n    })\n  }\n\n  render() {\n    const { playlist, activeTrackIndex } = this.props\n    return (\n      <Fragment>\n        <SEO\n          title=\"Music\"\n          keywords={['Ben Wiley', 'Music', 'Soundtrack', 'Games', 'Themes']}\n        />\n        <h1>Music</h1>\n        <div className=\"song_entries\">\n          {playlist.map((track, i) => (\n            <SongEntry\n              entryRef={i === activeTrackIndex ? this.activeEntryRef : null}\n              key={track.url}\n              track={track}\n              trackIndex={i}\n              active={this.state.mounted && activeTrackIndex === i}\n            />\n          ))}\n        </div>\n        <ProfileImage\n          filename=\"game_jam.jpg\"\n          caption=\"Composing the soundtrack for the game Sk8Border at the MontrÃ©al Anti-Fascist Game Jam (Apr 2018)\"\n        />\n      </Fragment>\n    )\n  }\n}\n\nexport default playerContextFilter(Music, ['playlist', 'activeTrackIndex'])\n"],"sourceRoot":""}