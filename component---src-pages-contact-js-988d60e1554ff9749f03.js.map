{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","Contact","props","a","createElement","title","keywords","href","SEO","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAuBeO,UAnBC,SAAAC,GAAK,OACnBJ,EAAAK,EAAAC,cAACP,EAAA,SAAD,KACEC,EAAAK,EAAAC,cAACJ,EAAA,EAAD,CACEK,MAAM,UACNC,SAAU,CAAC,YAAa,UAAW,QAAS,SAAU,aAExDR,EAAAK,EAAAC,cAAA,qBACAN,EAAAK,EAAAC,cAAA,SACEN,EAAAK,EAAAC,cAAA,KAAGG,KAAK,oCAAR,8BAEFT,EAAAK,EAAAC,cAAA,SACEN,EAAAK,EAAAC,cAAA,KAAGG,KAAK,mCAAR,4BAEFT,EAAAK,EAAAC,cAAA,SACEN,EAAAK,EAAAC,cAAA,KAAGG,KAAK,oCAAR,4HCbN,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMN,EAAmBG,EAAnBH,SAAUD,EAASI,EAATJ,MAChD,OACEQ,EAAAV,EAAAC,cAACU,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJT,GAAeQ,EAAKE,KAAKC,aAAaX,YACxC,OACEG,EAAAV,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,eAAgB,CACdZ,QAEFN,MAAOA,EACPmB,cAAa,QAAUN,EAAKE,KAAKC,aAAahB,MAC9CO,KAAM,CACJ,CACEa,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASrB,GAEX,CACEsB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASrB,GAEX,CACEoB,KAAI,sBACJC,QAASP,IAGVU,OACCvB,EAASwB,OAAS,EACd,CACEL,KAAI,WACJC,QAASpB,EAASyB,KAAT,OAEX,IAELF,OAAOjB,MAtDlBM,KAAAc,IA8DJxB,EAAIyB,aAAe,CACjBtB,KAAI,KACJC,KAAM,GACNN,SAAU,IAGZE,EAAI0B,UAAY,CACdxB,YAAayB,IAAUC,OACvBzB,KAAMwB,IAAUC,OAChBxB,KAAMuB,IAAUE,MAChB/B,SAAU6B,IAAUG,QAAQH,IAAUC,QACtC/B,MAAO8B,IAAUC,OAAOG,YAGX/B,MAEf,IAAMQ,EAAY","file":"component---src-pages-contact-js-988d60e1554ff9749f03.js","sourcesContent":["import React, { Fragment } from 'react'\n\nimport SEO from '../components/seo'\n\nconst Contact = props => (\n  <Fragment>\n    <SEO\n      title=\"Contact\"\n      keywords={['Ben Wiley', 'Contact', 'Email', 'GitHub', 'Twitter']}\n    />\n    <h1>Contact</h1>\n    <p>\n      <a href=\"mailto:therealbenwiley@gmail.com\">therealbenwiley@gmail.com</a>\n    </p>\n    <p>\n      <a href=\"https://github.com/benwiley4000\">github.com/benwiley4000</a>\n    </p>\n    <p>\n      <a href=\"https://twitter.com/benwiley4000\">@benwiley4000</a>\n    </p>\n  </Fragment>\n)\n\nexport default Contact\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}